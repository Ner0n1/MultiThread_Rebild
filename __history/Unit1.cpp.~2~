//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include <windows.h>
#include <string.h>
#include "Unit1.h"
#include "Unit2.h"
#include "Unit3.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
bool isThreadOn;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{

}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	Button1 -> Enabled = false;
	Button2 -> Enabled = true;
	Edit1 -> Enabled = false;
	Edit2 -> Enabled = false;

	ReadThreadPtr = new Read_T(false);
	isThreadOn = true;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button2Click(TObject *Sender)
{
	ReadThreadPtr->Terminate();
	isThreadOn = false;
	Button1 -> Enabled = true;
	Button2 -> Enabled = false;
	Edit1 -> Enabled = true;
	Edit2 -> Enabled = true;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormClose(TObject *Sender, TCloseAction &Action)
{
	if (isThreadOn)
	{
	ReadThreadPtr->Terminate();
	}
}
//---------------------------------------------------------------------------
